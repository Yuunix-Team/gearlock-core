#!/system/bin/sh

export PATH=/system/bin:/system/xbin:/vendor/bin:/product/bin

BOOTED=$(getprop sys.boot_completed)
export BOOTED

: "${CHROOTDIR:="/data/adb/gearlock"}"

die() { echo "==> ERROR: $1" >&2 && exit "${2:-1}"; }

chroot_add_mount() { mountpoint -q "$2" || mount $@; }
chroot_if_dir() { [ -d "$1" ] && shift && chroot_add_mount $@ || true; }

chroot_teardown() {
	[ "$(ls "$1"/tmp/session_* 2>/dev/null | wc -l)" = 1 ] &&
		umount $(mount | grep "on ${CHROOTDIR%/}/" | awk '{print $3}' | tac | xargs)
	[ -f "$1/tmp/session_$SESSION" ] && rm "$1/tmp/session_$SESSION"
}

chroot_session() {
	local i=0
	while [ -f "$1/tmp/session_$i" ]; do i=$((i + 1)); done
	SESSION=$i
	touch "$1/tmp/session_$i"
}

chroot_setup() {
	ls "$1/tmp/session_"* > /dev/null 2>&1 && return 0

	TG=$1
	rbind_map() { chroot_add_mount "$1" "$TG$1" --rbind; }
	rbind_ifdir() { chroot_if_dir "$1" "$1" "$TG$1" --rbind; }

	indir_map_data() {
		chroot_add_mount "/data" "$TG/data" --bind
		for d in /data/*/; do
			mountpoint -q "$d" && rbind_map "$d"
		done
	}

	chroot_add_mount proc "$1/proc" -t proc -o nosuid,noexec,nodev &&
		chroot_add_mount sys "$1/sys" -t sysfs -o nosuid,noexec,nodev,ro &&
		chroot_if_dir /sys/firmware/efi/efivars efivarfs "$1/sys/firmware/efi/efivars" -t efivarfs -o nosuid,noexec,nodev &&
		rbind_map dev &&
		indir_map_data &&
		rbind_map system &&
		rbind_map storage &&
		rbind_map sdcard &&
		rbind_ifdir apex &&
		rbind_ifdir data_mirror &&
		rbind_ifdir linkerconfig &&
		rbind_ifdir debug_ramdisk &&
		rbind_ifdir system_ext &&
		rbind_ifdir product &&
		rbind_ifdir vendor &&
		chroot_add_mount tmp "$1/tmp" -t tmpfs -o mode=1777,nodev,nosuid &&
		chroot_add_mount / "$1/android" --bind &&
		chroot_session "$1"
}

[ "$USER" = "root" ] || die "This script must be ran with root. Please try again using 'su -c ${0##*/}'"

chroot_setup "$CHROOTDIR" || die "Failed to setup chroot $CHROOTDIR"
